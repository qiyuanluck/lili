server:
  port: 7070
  tomcat:
    uri-encoding: UTF-8

spring:
  datasource:
    # 使用druid数据库连接池
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 使用Unicode字符集、指定字符编码为UTF-8、禁用SSL连接、允许多个查询在一次请求中执行
    url: jdbc:mysql://localhost:3306/数据库名字?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
    username: root
    password:
    # Spring Boot 默认是不注入这些属性值的，需要自己绑定
    # druid 数据源专有配置
    # 初始建立的连接数，因为连接远程数据库久不使用会失效，所以按回默认的初始0条就好了
    initialSize: 0
    # 连接池中的最小空闲连接数 默认是0 虽然建立连接会耗时，但是使用远程数据库的话，为了不保留失活连接，还是按回默认0条空闲好了
    minIdle: 0
    # 最大活动连接数
    maxActive: 20
    # 如果连接池中的所有连接都已被占用，请求新连接的线程将最多等待60秒，然后会抛出异常
    maxWait: 60000
    # 空闲连接的存活时间为1分钟，默认是30分钟，设1分钟是因为远程数据库3~4分钟就自动失效，如果连接不断开就会卡住20秒，严重影响查询体验
    minEvictableIdleTimeMillis: 60000
    # 每隔1分钟就检查一次，回收超过最小空闲时间的空闲连接
    timeBetweenEvictionRunsMillis: 30000
    # 验证连接的查询语句
    validationQuery: SELECT 1 FROM DUAL
    # 设置在连接空闲时是否执行验证查询语句，如果设置为 true，则连接池会在空闲时定期执行 validationQuery 验证连接的有效性。
    testWhileIdle: true
    # 设置在从连接池中获取连接时是否执行验证查询语句
    testOnBorrow: false
    # 设置在归还连接到连接池时是否执行验证查询语句
    testOnReturn: false
    # 设置是否缓存 PreparedStatement，默认为 true，即缓存 PreparedStatement，提高性能
    poolPreparedStatements: true
    # 配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    # 如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    # 则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    # 每个连接在缓存 PreparedStatement 的最大数量
    maxPoolPreparedStatementPerConnectionSize: 20
    # 是否启用全局统计。如果设置为 true，则 Druid 的监控统计功能将会全局启用
    useGlobalDataSourceStat: true
    # 连接属性配置，druid.stat.mergeSql=true 表示是否合并 SQL；druid.stat.slowSqlMillis=500 表示慢 SQL 的阈值，单位为毫秒
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  servlet:
    multipart:
      # 限制单个文件的上传大小
      max-file-size: 30MB
      max-request-size: 30MB
      # 设置懒解析，提升上传性能
      resolve-lazily: true
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    password:
    jedis:
      # 连接池是为了避免频繁地创建和销毁Redis连接，以提高性能
      pool:
        # 连接池中的最小空闲连接
        min-idle: 10
        # 连接池中的最大空闲连接，较大的值可以支持更多的并发连接，但也会占用更多的资源
        max-idle: 10
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 从池中借用连接时，验证连接是否仍然有效 默认false
        testOnBorrow: true
        # 定期对空闲连接进行验证，以确保它们仍然有效 默认false
        testWhileIdle: true
        # 连接在池中空闲的时间超过这个值，那么它可能会被连接池回收 默认60000 即60秒
        minEvictableIdleTimeMills: 60000
        # 定期运行空闲连接回收的时间间隔，查找并回收那些空闲时间超过 minEvictableIdleTimeMills 的连接 默认30000 即30秒
        timeBetweenEvictionRunsMillis: 30000
        # 每次运行连接回收时要测试的连接数，-1表示测试所有的空闲连接
        numTestsPerEvictionRun: -1
    # 连接超时时间（毫秒）
    timeout: 5000
#  rabbitmq:
#    # RabbitMQ服务器地址
#    host: 127.0.0.1
#    # RabbitMQ服务器连接端口
#    port: 9876
    # 访问用户名和密码
#    username: ***
#    password: ***
#    # 虚拟主机
#    virtual-host: /

directory:
  # 投稿视频存储目录
  video: public/video/
  # 分片存储目录
  chunk: public/chunk/
  # 投稿封面存储目录
  cover: public/img/cover/

oss:
  # 对象存储桶的名字
  bucket:
  # 外网访问的域名，记得最后面的"/"
  bucketUrl:
  # 地域节点
  endpoint:
  # 有访问权限的用户的 access-key-id
  keyId:
  # 有访问权限的用户的 access-key-Secret
  keySecret:
  # ossClient实例维持的空闲时间，单位毫秒，超过会自动关闭释放资源
  idleTimeout: 10000

elasticsearch:
  # elasticsearch服务地址
  host:
  port: 9200
  username: elastic
  password:
